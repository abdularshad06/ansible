ansible-controller Machine Start

vagrant up ansible-controller
vagrant ssh ansible-controller
sshd_config --> PasswordAuthentication = yes
vagrant ssh ansible-controller

sudo sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
sudo sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
sudo yum update -y

exit

vagrant reload ansible-controller

vagrant ssh ansible-controller

===================================================================================================================

Install EPEL and install python3.11 for ansible pre-requisites.

 sudo dnf install epel-release -y

===================================================================================================================

Install Python3.11 on CentOS 8

https://tecadmin.net/install-python-3-11-on-centos-fedora/

Issue :-

  Problem: conflicting requests
  - nothing provides python(abi) = 3.11 needed by ansible-8.3.0-1.el8.noarch
  - nothing provides python3.11dist(ansible-core) >= 2.15.3 needed by ansible-8.3.0-1.el8.noarch
  - nothing provides /usr/bin/python3.11 needed by ansible-8.3.0-1.el8.noarch
(try to add '--skip-broken' to skip uninstallable packages or '--nobest' to use not only best candidate packages)


$ sudo dnf install gcc openssl-devel bzip2-devel sqlite-devel wget libffi-devel -y
$ cd /usr/src 
$ sudo wget https://www.python.org/ftp/python/3.11.3/Python-3.11.3.tgz 
$ sudo tar xzf Python-3.11.3.tgz 
$ cd Python-3.11.3 
$ sudo ./configure --enable-optimizations 
$ sudo make altinstall 
$ python3.11 -V 
$ sudo rm /usr/src/Python-3.11.3.tgz 
$ sudo dnf install python3-pip -y

===================================================================================================================

-----------------------------------------
https://docs.python.org/3/tutorial/venv.html
------------------------------------------
python virtual env. create :-

$ python -m venv tutorial-env

Activate Virtual Environment :-

$ source tutorial-env/bin/activate

Check Python Version :-
$ python --version

To deactivate a virtual environment, type:-

$ deactivate


===================================================================================================================

Install Ansible on CentOS 8 :-

 $ sudo dnf groupinstall  "Development Tools" -y
 $ sudo dnf install epel-release -y
 $ sudo pip3 install --upgrade --ignore-installed pip setuptools
 $ sudo python3 -m pip install ansible
 $ ansible --version


Error :-
(tutorial-env) [vagrant@ansible-controller ~]$ ansible --version
ERROR: No module named '_ctypes'

Resolution :-
Note : if showing Error --> ERROR: No module named '_ctypes'
then 
sudo yum install libffi-devel
and reinstall python3.11

wget https://www.python.org/ftp/python/3.11.3/Python-3.11.3.tgz 
tar xzf Python-3.11.3.tgz 
cd Python-3.11.3 
./configure --enable-optimizations 
sudo make altinstall 
python3.11 -V
ansible --version

Error :-
[vagrant@ansible-controller Python-3.11.3]$ ansible --version
[DEPRECATION WARNING]: Ansible will require Python 3.8 or newer on the controller starting with Ansible 2.12. Current version: 3.6.8
(default, Sep 10 2021, 09:13:53) [GCC 8.5.0 20210514 (Red Hat 8.5.0-3)]. This feature will be removed from ansible-core in version
2.12. Deprecation warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
/usr/local/lib/python3.6/site-packages/ansible/parsing/vault/__init__.py:44: CryptographyDeprecationWarning: Python 3.6 is no longer supported by the Python core team. Therefore, support for it is deprecated in cryptography. The next release of cryptography will remove support for Python 3.6.
  from cryptography.exceptions import InvalidSignature
ansible [core 2.11.12]
  config file = None
  configured module search path = ['/home/vagrant/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.6/site-packages/ansible
  ansible collection location = /home/vagrant/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/local/bin/ansible
  python version = 3.6.8 (default, Sep 10 2021, 09:13:53) [GCC 8.5.0 20210514 (Red Hat 8.5.0-3)]
  jinja version = 3.0.3
  libyaml = True
[vagrant@ansible-controller Python-3.11.3]$


Resolution :-

[vagrant@ansible-controller Python-3.11.3]$ python3 --version
Python 3.6.8
[vagrant@ansible-controller Python-3.11.3]$ which python3
/usr/bin/python3
[vagrant@ansible-controller Python-3.11.3]$ ll /usr/bin/python3
lrwxrwxrwx. 1 root root 25 Feb 22 10:31 /usr/bin/python3 -> /etc/alternatives/python3

[vagrant@ansible-controller Python-3.11.3]$ sudo unlink /usr/bin/python3

[vagrant@ansible-controller Python-3.11.3]$ sudo ln -s /usr/bin/python3.11 /usr/bin/python3

then reinstall ansible :-

$ sudo pip3 install --upgrade --ignore-installed pip setuptools
 $ sudo python3 -m pip install ansible
 $ ansible --version

===================================================================================================================
Install sshpass in ansible-controller :-

$ sudo dnf install http://mirror.centos.org/centos/8-stream/AppStream/x86_64/os/Packages/sshpass-1.09-4.el8.x86_64.rpm -y

Do Passwordless SSH in Every Ansible Node

===================================================================================================================

Vagrant Up and SSH VMs :-
 vagrant up webserver1 && vagrant ssh webserver1

if faceing error :-
$ vagrant ssh webserver1
vagrant@127.0.0.1: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).

resolution :-
rm -rf /d/github/ansible/.vagrant/machines/webserver1/virtualbox/*
vagrant up webserver1 && vagrant ssh webserver1

then

$ sudo sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
$ sudo sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
$ sudo yum update -y

$ vagrant reload webserver1

$ sudo yum install vim bash-completion -y

$ sudo -p mkdir /etc/ansible/
$ ansible-config init --disabled > /etc/ansible/ansible.cfg
$ vim /etc/ansible/ansible.cfg
host_key_checking=False


===================================================================================================================
Inventory Related Commands :-

$ mkdir -p /data/inventory/inventory.txt

$ ansible -m ping all -i /data/inventory/inventory.txt
$ ansible -m ping webserver1 -i /data/inventory/inventory.txt
$ ansible -m ping webserver2 -i /data/inventory/inventory.txt
$ ansible -m ping webservers -i /data/inventory/inventorygroup.txt
$ ansible -m ping databaseservers -i /data/inventory/inventorygroup.txt
$ ansible -m ping webserver* -i /data/inventory/inventorygroup.txt
$ ansible -m ping nfs_database_servers -i /data/inventory/inventorygroup2.txt


===================================================================================================================

Playbook Related Commands :-

$ ansible-playbook /data/playbook/playbook1.yml -i /data/inventory/myinventory.txt
$ ansible-playbook /data/playbook/playbook2.yml -i /data/inventory/myinventory.txt
$ ansible-playbook /data/playbook/playbook3.yml -i /data/inventory/myinventory.txt
$ ansible-playbook /data/playbook/playbook4.yml -i /data/inventory/myinventory.txt
$ ansible-playbook /data/playbook/playbook5.yml -i /data/inventory/myinventory.txt

===================================================================================================================

Module Related Commands :-

Copy :-
$ ansible-playbook /data/module/copy/copy.yml -i /data/inventory/myinventory.txt
$ ansible-playbook /data/module/copy/copy1.yml -i /data/inventory/myinventory.txt
$ ansible-playbook /data/module/copy/copy2.yml -i /data/inventory/myinventory.txt

FileInLine :-
$ ansible-playbook /data/module/fileinline/command.yml -i /data/inventory/myinventory.txt   --> File Not Created by this.
$ ansible-playbook /data/module/fileinline/lineInFile.yml -i /data/inventory/myinventory.txt

===================================================================================================================

Set Inventory File in Ansible Config :-
$ sudo vim /etc/ansible/ansible.cfg
inventory=/etc/ansible/hosts

$ sudo vim /etc/ansible/hosts
webserver1 ansible_host=192.168.30.11 ansible_password=vagrant ansible_connection=ssh ansible_port=22 ansible_user=root
webserver2 ansible_host=192.168.30.12 ansible_password=vagrant ansible_connection=ssh ansible_port=22 ansible_user=root
dbserver1 ansible_host=192.168.30.13 ansible_password=vagrant ansible_connection=ssh ansible_port=22 ansible_user=root

[webservers]
webserver1

[dbservers]
dbserver1

[web_db_server]
webserver1
dbserver1

===================================================================================================================

script :-
$ ansible-playbook /data/module/script/script.yml
$ ansible-playbook /data/module/script/script1.yml
$ ansible-playbook /data/module/script/script2.yml

===================================================================================================================

Service :-
$ ansible-playbook /data/module/service/service1.yml

===================================================================================================================

User :-
$ ansible-playbook /data/module/user/user.yml
$ ansible-playbook /data/module/user/user1.yml

===================================================================================================================

Variable :-
$ ansible-playbook /data/module/variable/variable1.yml

===================================================================================================================

Commands :-
$ ansible-playbook /data/condition/condition1.yml -v
$ ansible-playbook /data/condition/condition2.yml -v
$ ansible-playbook /data/condition/condition3.yml -v

===================================================================================================================